/*
 * dig_inouts.h
 */

#ifndef INOUTS_H_
#define INOUTS_H_
#include <stm32f4xx.h>

//INPUTS
#define ALL_GPIO_RCC 	(RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOC | RCC_AHB1Periph_GPIOD | RCC_AHB1Periph_GPIOG)
//INPUTS

//Buttons
#define PLAY1BUT_pin GPIO_Pin_14
#define PLAY1BUT_GPIO GPIOG
#define PLAY1BUT (!(PLAY1BUT_GPIO->IDR & PLAY1BUT_pin))

#define PLAY2BUT_pin GPIO_Pin_11
#define PLAY2BUT_GPIO GPIOG
#define PLAY2BUT (!(PLAY2BUT_GPIO->IDR & PLAY2BUT_pin))

#define RECBUT_pin GPIO_Pin_10
#define RECBUT_GPIO GPIOG
#define RECBUT (!(RECBUT_GPIO->IDR & RECBUT_pin))

#define BANK1BUT_pin GPIO_Pin_13
#define BANK1BUT_GPIO GPIOG
#define BANK1BUT (!(BANK1BUT_GPIO->IDR & BANK1BUT_pin))

#define BANK2BUT_pin GPIO_Pin_12
#define BANK2BUT_GPIO GPIOG
#define BANK2BUT (!(BANK2BUT_GPIO->IDR & BANK2BUT_pin))

#define BANKRECBUT_pin GPIO_Pin_9
#define BANKRECBUT_GPIO GPIOG
#define BANKRECBUT (!(BANKRECBUT_GPIO->IDR & BANKRECBUT_pin))

#define REV1BUT_pin GPIO_Pin_1
#define REV1BUT_GPIO GPIOC
#define REV1BUT (!(REV1BUT_GPIO->IDR & REV1BUT_pin))

#define REV2BUT_pin GPIO_Pin_15
#define REV2BUT_GPIO GPIOA
#define REV2BUT (!(REV2BUT_GPIO->IDR & REV2BUT_pin))

#define EDIT_BUTTON_pin GPIO_Pin_3
#define EDIT_BUTTON_GPIO GPIOD
#define EDIT_BUTTON (!(EDIT_BUTTON_GPIO->IDR & EDIT_BUTTON_pin))


//OUTPUTS

#define ENDOUT1_pin GPIO_Pin_3
#define ENDOUT1_GPIO GPIOA
#define ENDOUT1_ON ENDOUT1_GPIO->BSRRL = ENDOUT1_pin
#define ENDOUT1_OFF ENDOUT1_GPIO->BSRRH = ENDOUT1_pin

//LEDs (direct control)
#define PLAYLED1_pin GPIO_Pin_11
#define PLAYLED1_GPIO GPIOA
#define PLAYLED1_ON PLAYLED1_GPIO->BSRRL = PLAYLED1_pin
#define PLAYLED1_OFF PLAYLED1_GPIO->BSRRH = PLAYLED1_pin

#define PLAYLED2_pin GPIO_Pin_12
#define PLAYLED2_GPIO GPIOA
#define PLAYLED2_ON PLAYLED2_GPIO->BSRRL = PLAYLED2_pin
#define PLAYLED2_OFF PLAYLED2_GPIO->BSRRH = PLAYLED2_pin

#define CLIPLED1_pin GPIO_Pin_9
#define CLIPLED1_GPIO GPIOA
#define CLIPLED1_ON CLIPLED1_GPIO->BSRRL = CLIPLED1_pin
#define CLIPLED1_OFF CLIPLED1_GPIO->BSRRH = CLIPLED1_pin

#define CLIPLED2_pin GPIO_Pin_10
#define CLIPLED2_GPIO GPIOA
#define CLIPLED2_ON CLIPLED2_GPIO->BSRRL = CLIPLED2_pin
#define CLIPLED2_OFF CLIPLED2_GPIO->BSRRH = CLIPLED2_pin


//protoype p5 only: pin to control an analog switch which selects line level (switch open) or modular level (switch closed)
#define LINESWITCH_pin GPIO_Pin_7
#define LINESWITCH_GPIO GPIOG
#define LINESWITCH_OFF LINESWITCH_GPIO->BSRRL = LINESWITCH_pin

#define EDIT_BUTTONREF_pin GPIO_Pin_4
#define EDIT_BUTTONREF_GPIO GPIOD
#define EDIT_BUTTONREF_OFF EDIT_BUTTONREF_GPIO->BSRRH = EDIT_BUTTONREF_pin


/*


#define PING_RCC RCC_AHB1Periph_GPIOE

#define PINGBUT_pin GPIO_Pin_5
#define PINGBUT_GPIO GPIOE
#define PINGBUT (!(PINGBUT_GPIO->IDR & PINGBUT_pin))

// Infinite Repeat Button and Jack
#define INF_RCC RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOC

//In p3 it's D5
#define INF1BUT_pin GPIO_Pin_13
#define INF1BUT_GPIO GPIOC
#define INF1BUT (!(INF1BUT_GPIO->IDR & INF1BUT_pin))


#define INF2BUT_pin GPIO_Pin_9
#define INF2BUT_GPIO GPIOA
#define INF2BUT (!(INF2BUT_GPIO->IDR & INF2BUT_pin))


#define REVSW_RCC RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOG

#define REV1SW_pin GPIO_Pin_10
#define REV1SW_GPIO GPIOG
#define REVSW_CH1 (!(REV1SW_GPIO->IDR & REV1SW_pin))

#define REV2SW_pin GPIO_Pin_1
#define REV2SW_GPIO GPIOA
#define REVSW_CH2 (!(REV2SW_GPIO->IDR & REV2SW_pin))


//OUTPUTS

//CLK OUT
#define CLKOUT_RCC RCC_AHB1Periph_GPIOE

#define CLKOUT_pin GPIO_Pin_3
#define CLKOUT_GPIO GPIOE
#define CLKOUT_ON CLKOUT_GPIO->BSRRL = CLKOUT_pin
#define CLKOUT_OFF CLKOUT_GPIO->BSRRH = CLKOUT_pin
#define CLKOUT_TRIG_TIME 960 
//™™20ms

//PING Button LED
#define PINGBUTLED_RCC RCC_AHB1Periph_GPIOE

#define LED_PINGBUT_pin GPIO_Pin_4
#define LED_PINGBUT_GPIO GPIOE
#define LED_PINGBUT_ON LED_PINGBUT_GPIO->BSRRL = LED_PINGBUT_pin
#define LED_PINGBUT_OFF LED_PINGBUT_GPIO->BSRRH = LED_PINGBUT_pin

//INF REPEAT Button LED
#define INF1_BUTLED_RCC RCC_AHB1Periph_GPIOD
#define LED_INF1_pin GPIO_Pin_4
#define LED_INF1_GPIO GPIOD
#define LED_INF1_ON LED_INF1_GPIO->BSRRL = LED_INF1_pin
#define LED_INF1_OFF LED_INF1_GPIO->BSRRH = LED_INF1_pin

#define INF2_BUTLED_RCC RCC_AHB1Periph_GPIOA
#define LED_INF2_pin GPIO_Pin_10
#define LED_INF2_GPIO GPIOA
#define LED_INF2_ON LED_INF2_GPIO->BSRRL = LED_INF2_pin
#define LED_INF2_OFF LED_INF2_GPIO->BSRRH = LED_INF2_pin




//OVLD LEDs
#define LED_RCC RCC_AHB1Periph_GPIOA

#define LED_OVLD1 GPIO_Pin_11
#define LED_OVLD2 GPIO_Pin_12
#define LED_GPIO GPIOA
#define LED_OVLD1_ON LED_GPIO->BSRRL = LED_OVLD1
#define LED_OVLD1_OFF LED_GPIO->BSRRH = LED_OVLD1
#define LED_OVLD2_ON LED_GPIO->BSRRL = LED_OVLD2
#define LED_OVLD2_OFF LED_GPIO->BSRRH = LED_OVLD2
*/

//DEBUG pins
/*
#define DEBUG_RCC RCC_AHB1Periph_GPIOD | RCC_AHB1Periph_GPIOC

#define DEBUG0 GPIO_Pin_3
#define DEBUG0_GPIO GPIOD
#define DEBUG0_ON DEBUG0_GPIO->BSRRL = DEBUG0
#define DEBUG0_OFF DEBUG0_GPIO->BSRRH = DEBUG0

#define DEBUG1 GPIO_Pin_3
#define DEBUG1_GPIO GPIOD
#define DEBUG1_ON DEBUG1_GPIO->BSRRL = DEBUG1
#define DEBUG1_OFF DEBUG1_GPIO->BSRRH = DEBUG1

#define DEBUG2 GPIO_Pin_13
#define DEBUG2_GPIO GPIOC
#define DEBUG2_ON DEBUG2_GPIO->BSRRL = DEBUG2
#define DEBUG2_OFF DEBUG2_GPIO->BSRRH = DEBUG2

#define DEBUG3 GPIO_Pin_14
#define DEBUG3_GPIO GPIOC
#define DEBUG3_ON DEBUG3_GPIO->BSRRL = DEBUG3
#define DEBUG3_OFF DEBUG3_GPIO->BSRRH = DEBUG3

#define DEBUG4 GPIO_Pin_15
#define DEBUG4_GPIO GPIOC
#define DEBUG4_ON DEBUG4_GPIO->BSRRL = DEBUG4
#define DEBUG4_OFF DEBUG4_GPIO->BSRRH = DEBUG4
*/
void init_dig_inouts(void);

#endif /* INOUTS_H_ */
